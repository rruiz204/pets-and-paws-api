// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pets_And_Paws_Api.App.Infrastructure.Database;

#nullable disable

namespace pets_and_paws_api.App.Infrastructure.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240913153047_HashPasswordOfAdmin")]
    partial class HashPasswordOfAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.Relationships.RoleScope", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("ScopeId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "ScopeId");

                    b.HasIndex("ScopeId");

                    b.ToTable("RoleScope");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            ScopeId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            ScopeId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            ScopeId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            ScopeId = 4
                        });
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.ResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.ToTable("ResetToken");
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Full access to all system functionalities",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.Scope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Scopes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Allows you to read user information",
                            Name = "user:read"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Allows you to create new user records",
                            Name = "user:write"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Allows modification of existing user information",
                            Name = "user:update"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Allows deletion of user records",
                            Name = "user:delete"
                        });
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@admin.com",
                            FirstName = "admin",
                            LastName = "",
                            Password = "AQAAAAIAAYagAAAAENG9AhRVMNmmMHnAGmgFw4By3LxV9lekn7r6KC+RJrmRvFYgE2gcgW7G8I3EelghhA==",
                            PhoneNumber = "",
                            RoleId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.Relationships.RoleScope", b =>
                {
                    b.HasOne("Pets_And_Paws_Api.App.Domain.Models.Role", "Role")
                        .WithMany("Scopes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pets_And_Paws_Api.App.Domain.Models.Scope", "Scope")
                        .WithMany("Roles")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.User", b =>
                {
                    b.HasOne("Pets_And_Paws_Api.App.Domain.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.Role", b =>
                {
                    b.Navigation("Scopes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pets_And_Paws_Api.App.Domain.Models.Scope", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
